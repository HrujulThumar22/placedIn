{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\placedIn\\\\client\\\\src\\\\components\\\\YouInterviewExperiences.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PostItem from './PostItem';\nimport Navbar from './Navbar';\nimport { Alert } from '@material-ui/lab';\nimport axios from 'axios';\nimport { MDBContainer } from 'mdbreact';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction YouInterviewExperiences() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': localStorage.getItem('token')\n          }\n        };\n        const res1 = await axios.get('http://localhost:5000/interview/my', config);\n        let posts = res1.data;\n        posts.sort((post1, post2) => {\n          let x = new Date(post1.updatedAt);\n          let y = new Date(post2.updatedAt);\n          if (x < y) return 1;\n          if (x >= y) return -1;\n          return 0;\n        });\n        setPosts(posts);\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const onDelete = async post_id => {\n    toast.success('Interview Experience deleted !', {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 2000\n    });\n    const Posts = posts.filter(post => {\n      return post._id !== post_id;\n    });\n    setPosts(Posts);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      };\n      const res1 = await axios.delete(`http://localhost:5000/interview/my/${post_id}`, config);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"post pb-4 mt-4 \",\n      xl: \"8\",\n      children: posts.length !== 0 ? posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(PostItem, {\n          data: post,\n          parent: \"Interview Experience\",\n          onDelete: onDelete\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"No interview experiences!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(YouInterviewExperiences, \"cT3T7gGsuRWYATITW+0F9l7n7WM=\");\n\n_c = YouInterviewExperiences;\nexport default YouInterviewExperiences;\n\nvar _c;\n\n$RefreshReg$(_c, \"YouInterviewExperiences\");","map":{"version":3,"sources":["D:/MERN/placedIn/client/src/components/YouInterviewExperiences.js"],"names":["React","useState","useEffect","PostItem","Navbar","Alert","axios","MDBContainer","toast","YouInterviewExperiences","posts","setPosts","fetchPosts","config","headers","localStorage","getItem","res1","get","data","sort","post1","post2","x","Date","updatedAt","y","error","console","log","response","onDelete","post_id","success","position","POSITION","TOP_CENTER","autoClose","Posts","filter","post","_id","delete","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PostItem from './PostItem'\r\nimport Navbar from './Navbar'\r\nimport { Alert } from '@material-ui/lab';\r\nimport axios from 'axios'\r\nimport {  MDBContainer } from 'mdbreact';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nfunction YouInterviewExperiences() {\r\n\r\n    const [ posts, setPosts ] = useState([])\r\n    \r\n    useEffect(() => {\r\n\r\n        const fetchPosts = async () => {\r\n\r\n            try {\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'auth-token': localStorage.getItem('token')\r\n                    }\r\n                }\r\n\r\n                const res1 = await axios.get('http://localhost:5000/interview/my', config)\r\n                \r\n                let posts = res1.data\r\n               \r\n                posts.sort((post1, post2) => {\r\n                    let x = new Date(post1.updatedAt)\r\n                    let y = new Date(post2.updatedAt)\r\n                    if(x<y) return 1\r\n                    if(x>=y) return -1\r\n                    return 0\r\n                })\r\n        \r\n                setPosts(posts)\r\n               \r\n\r\n            } catch (error) {\r\n\r\n                console.log(error.response)\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        fetchPosts()\r\n\r\n    },[])\r\n\r\n    const onDelete = async (post_id) => {\r\n        \r\n        toast.success('Interview Experience deleted !', { \r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        })\r\n\r\n        const Posts = posts.filter((post) => {\r\n            return post._id!==post_id\r\n        })\r\n\r\n        setPosts(Posts)\r\n\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n            \r\n            const res1 = await axios.delete(`http://localhost:5000/interview/my/${post_id}`, config)\r\n            \r\n\r\n        } catch (error) {\r\n\r\n            console.log(error.response)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar />\r\n        <MDBContainer className=\"post pb-4 mt-4 \" xl=\"8\">\r\n            {\r\n                posts.length!==0 ?\r\n                posts.map((post) => {\r\n                    return <PostItem  key={post._id} data={post} parent=\"Interview Experience\" onDelete={onDelete}/>\r\n                })\r\n                :\r\n                <Alert severity=\"info\">No interview experiences!!</Alert>\r\n            }\r\n        </MDBContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default YouInterviewExperiences\r\n"]},"metadata":{},"sourceType":"module"}