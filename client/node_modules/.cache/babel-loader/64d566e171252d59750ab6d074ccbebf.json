{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\placedIn\\\\client\\\\src\\\\components\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PostItem from './PostItem';\nimport axios from 'axios';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { MDBCol, MDBCard, MDBIcon } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    if (newValue === 0) {\n      setSuggestions(posts);\n    } else if (newValue === 1) {\n      const temp = posts.filter(post => {\n        if (!post.experience) {\n          return post;\n        }\n      });\n      setSuggestions(temp);\n    } else if (newValue === 2) {\n      const temp = posts.filter(post => {\n        if (post.experience) {\n          return post;\n        }\n      });\n      setSuggestions(temp);\n    }\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': localStorage.getItem('token')\n          }\n        };\n        const res1 = await axios.get('http://localhost:5000/interview', config);\n        const res2 = await axios.get('http://localhost:5000/post', config);\n        let posts = res1.data;\n        posts.unshift(...res2.data); // console.log(posts)\n\n        posts.sort((post1, post2) => {\n          let x = new Date(post1.createdAt);\n          let y = new Date(post2.createdAt);\n          if (x < y) return 1;\n          if (x >= y) return -1;\n          return 0;\n        }); // console.log(posts.data.profileId.avatar)\n\n        setPosts(posts); // setSuggestions(posts)\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    fetchPosts(); // console.log(posts.data.profileId.avatar)\n  }, [suggestions]);\n  return /*#__PURE__*/_jsxDEV(MDBCol, {\n    className: \"post pr-2 pb-4 mt-5\",\n    lg: \"7\",\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"mx-5\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"grey lighten-2\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Interview Experiences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), suggestions.length !== 0 && suggestions.map(post => {\n      return /*#__PURE__*/_jsxDEV(PostItem, {\n        data: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"0af6Ed0az76dHMVwogePbGDTdYk=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/MERN/placedIn/client/src/components/Posts.js"],"names":["React","useEffect","useState","PostItem","axios","AddIcon","Paper","Tabs","Tab","MDBCol","MDBCard","MDBIcon","Post","posts","setPosts","suggestions","setSuggestions","value","setValue","handleChange","event","newValue","temp","filter","post","experience","fetchPosts","config","headers","localStorage","getItem","res1","get","res2","data","unshift","sort","post1","post2","x","Date","createdAt","y","error","console","log","response","length","map","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PostItem from './PostItem'\r\nimport axios from 'axios'\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { MDBCol, MDBCard, MDBIcon } from 'mdbreact';\r\n\r\n\r\n\r\nfunction Post() {\r\n\r\n    const [ posts, setPosts ] = useState([])\r\n    const [ suggestions, setSuggestions ] = useState([])\r\n    const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n\r\n    setValue(newValue);\r\n\r\n    if(newValue===0) {\r\n\r\n        setSuggestions(posts)\r\n\r\n    } else if(newValue===1) {\r\n\r\n        const temp = posts.filter((post) => {\r\n            if(!post.experience) {\r\n                return post\r\n            }\r\n        })\r\n\r\n        setSuggestions(temp)\r\n\r\n    } else if(newValue===2) {\r\n\r\n        const temp = posts.filter((post) => {\r\n            if(post.experience) {\r\n                return post\r\n            }\r\n        })\r\n\r\n        setSuggestions(temp)\r\n\r\n    }\r\n\r\n  };\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchPosts = async () => {\r\n\r\n            try {\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'auth-token': localStorage.getItem('token')\r\n                    }\r\n                }\r\n\r\n                const res1 = await axios.get('http://localhost:5000/interview', config)\r\n                const res2 = await axios.get('http://localhost:5000/post', config)\r\n                \r\n                let posts = res1.data\r\n                posts.unshift(...res2.data)\r\n                // console.log(posts)\r\n                posts.sort((post1, post2) => {\r\n                    let x = new Date(post1.createdAt)\r\n                    let y = new Date(post2.createdAt)\r\n                    if(x<y) return 1\r\n                    if(x>=y) return -1\r\n                    return 0\r\n                })\r\n                // console.log(posts.data.profileId.avatar)\r\n                setPosts(posts)\r\n                // setSuggestions(posts)\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error.response)\r\n\r\n            }\r\n\r\n        }\r\n\r\n        fetchPosts()\r\n        // console.log(posts.data.profileId.avatar)\r\n\r\n    }, [ suggestions])\r\n\r\n    return(\r\n        <MDBCol className=\"post pr-2 pb-4 mt-5\" lg=\"7\">\r\n            <MDBCard className=\"mx-5\">\r\n            <Paper className=\"grey lighten-2\">\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                <Tab label=\"All\"  />\r\n                <Tab label=\"Posts\" />\r\n                <Tab label=\"Interview Experiences\" />\r\n            </Tabs>\r\n            </Paper>\r\n            </MDBCard>\r\n            {\r\n                suggestions.length!==0 && \r\n                suggestions.map((post) => {\r\n                    return <PostItem  key={post._id} data={post} />\r\n                })\r\n            }\r\n            {/* <PostItem />\r\n            <PostItem />\r\n            <PostItem />\r\n            <PostItem />\r\n            <PostItem />\r\n            <PostItem />\r\n            <PostItem /> */}\r\n        </MDBCol>\r\n    )\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}