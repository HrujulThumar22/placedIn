{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\placedIn\\\\client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport DisplayError from './DisplayError';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  onAuthenticated\n}) {\n  _s();\n\n  const [data, setData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    username,\n    password\n  } = data;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(data);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = {\n      username,\n      password\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/', body, config);\n      console.log(res);\n      localStorage.setItem('token', res.data.token);\n      setIsAuthenticated(true);\n      setIsLoading(false);\n      onAuthenticated(username, res.data.token, true, false);\n    } catch (error) {\n      localStorage.removeItem('token');\n      setErrors(error.response.data.errors);\n      console.log(error.response.data.errors);\n      setIsAuthenticated(false);\n      setIsLoading(true);\n      onAuthenticated('', '', false, true);\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token');\n    }\n\n    if (localStorage.getItem('user')) {\n      localStorage.removeItem('user');\n    }\n\n    return () => {\n      setIsLoading(!isLoading);\n    };\n  }, []);\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tab-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tab active\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tab\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), errors.length !== 0 && errors.map(error => /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 58\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome Back!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setData({ ...data,\n                username: e.target.value\n              }),\n              required: true,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Username\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"req\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setData({ ...data,\n                password: e.target.value\n              }),\n              required: true,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"req\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button-block\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"0msoH7gLtcuCYI8+2VVdynLmfk0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/MERN/placedIn/client/src/components/Login.js"],"names":["React","useState","useEffect","Redirect","Link","DisplayError","axios","Login","onAuthenticated","data","setData","username","password","errors","setErrors","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","onSubmit","e","preventDefault","console","log","config","headers","body","res","post","localStorage","setItem","token","error","removeItem","response","getItem","length","map","msg","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAoC;AAAA;;AAEhC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;AAKA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAAEc,eAAF,EAAmBC,kBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM,CAAEgB,SAAF,EAAaC,YAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,IAA/B;;AAGA,QAAMU,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAE1BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AAEA,UAAMe,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAMC,IAAI,GAAG;AAAEf,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAb;;AAEA,QAAI;AAEA,YAAMe,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,wBAAX,EAAqCF,IAArC,EAA2CF,MAA3C,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,GAAG,CAAClB,IAAJ,CAASsB,KAAtC;AACAf,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAV,MAAAA,eAAe,CAACG,QAAD,EAAWgB,GAAG,CAAClB,IAAJ,CAASsB,KAApB,EAA2B,IAA3B,EAAiC,KAAjC,CAAf;AAEH,KATD,CASE,OAAQC,KAAR,EAAgB;AAEdH,MAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAnB,MAAAA,SAAS,CAACkB,KAAK,CAACE,QAAN,CAAezB,IAAf,CAAoBI,MAArB,CAAT;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACE,QAAN,CAAezB,IAAf,CAAoBI,MAAhC;AACAG,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAV,MAAAA,eAAe,CAAC,EAAD,EAAK,EAAL,EAAS,KAAT,EAAgB,IAAhB,CAAf;AAEH;AAEJ,GAlCD;;AAoCAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG2B,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7BN,MAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACH;;AACD,QAAGJ,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC5BN,MAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACH;;AACD,WAAQ,MAAM;AACVf,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,KAFD;AAIH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGF,eAAH,EAAoB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BAA2B;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA,+BAAoB;AAAG,UAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKMF,MAAM,CAACuB,MAAP,KAAgB,CAAhB,IAAqBvB,MAAM,CAACwB,GAAP,CAAYL,KAAD,iBAAW,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACM;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAtB,CAL3B,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAGlB,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAA/B;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,KAAK,EAAET,QAFX;AAGI,cAAA,QAAQ,EAAGS,CAAD,IAAOV,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,gBAAAA,QAAQ,EAAES,CAAC,CAACmB,MAAF,CAASC;AAA9B,eAAD,CAH5B;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,YAAY,EAAC;AALjB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA,kDACY;AAAM,gBAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAE5B,QAFX;AAGI,cAAA,QAAQ,EAAGQ,CAAD,IAAOV,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,gBAAAA,QAAQ,EAAEQ,CAAC,CAACmB,MAAF,CAASC;AAA9B,eAAD,CAH5B;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,YAAY,EAAC;AALjB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA,kDACY;AAAM,gBAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAyBI;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,mCAAsB,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAzBJ,eA0BI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GA/GQjC,K;;KAAAA,K;AAiHT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport DisplayError from './DisplayError'\r\nimport axios from 'axios'\r\n\r\nfunction Login({ onAuthenticated }) {\r\n\r\n    const [ data, setData ] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const [ errors, setErrors ] = useState([])\r\n\r\n    const [ isAuthenticated, setIsAuthenticated ] = useState(false)\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    const { username, password } = data\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n\r\n        e.preventDefault()\r\n        \r\n        console.log(data)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const body = { username, password }\r\n\r\n        try {\r\n\r\n            const res = await axios.post('http://localhost:5000/', body, config)\r\n            console.log(res)\r\n            localStorage.setItem('token',res.data.token)\r\n            setIsAuthenticated(true)\r\n            setIsLoading(false)\r\n            onAuthenticated(username, res.data.token, true, false)\r\n            \r\n        } catch ( error ) {\r\n\r\n            localStorage.removeItem('token')\r\n            setErrors(error.response.data.errors)\r\n            console.log(error.response.data.errors)\r\n            setIsAuthenticated(false)\r\n            setIsLoading(true)\r\n            onAuthenticated('', '', false, true)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')){\r\n            localStorage.removeItem('token') \r\n        }\r\n        if(localStorage.getItem('user')){\r\n            localStorage.removeItem('user')\r\n        }\r\n        return  () => {\r\n            setIsLoading(!isLoading)\r\n        }\r\n        \r\n    }, [] )\r\n\r\n    if(isAuthenticated) {\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    return (\r\n        <div className=\"form mt-5\">\r\n            <ul className=\"tab-group\">\r\n                <li className=\"tab active\"><a href=\"/\">Log In</a></li>\r\n                <li className=\"tab\"><a href=\"/signup\">Sign Up</a></li>\r\n            </ul>\r\n            { errors.length!==0 && errors.map((error) => <DisplayError error={error.msg}/>) }\r\n            <div className=\"tab-content\">\r\n                <div id=\"login\">   \r\n                    <h1>Welcome Back!</h1>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className=\"field-wrap\">\r\n                            <input \r\n                                type=\"text\"  \r\n                                value={username}\r\n                                onChange={(e) => setData({ ...data, username: e.target.value })}\r\n                                required \r\n                                autoComplete=\"off\"                               \r\n                            />\r\n                            <label>\r\n                                Username<span className=\"req\">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"field-wrap\">\r\n                            <input \r\n                                type=\"password\"  \r\n                                value={password}\r\n                                onChange={(e) => setData({ ...data, password: e.target.value })}\r\n                                required \r\n                                autoComplete=\"off\"                              \r\n                            />\r\n                            <label>\r\n                                Password<span className=\"req\">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"forgot\"><Link to='/'>Forgot Password?</Link></p>\r\n                        <button type=\"submit\" className=\"button button-block\">Log In</button>                \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}