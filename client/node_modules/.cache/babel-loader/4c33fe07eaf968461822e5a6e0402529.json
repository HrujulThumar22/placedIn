{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\placedIn\\\\client\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const [data, setData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    password1: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const {\n    name,\n    username,\n    email,\n    password1,\n    password2\n  } = data;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password1 !== password2) {\n      console.log('Passwords do not match');\n    } else {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const body = {\n        name,\n        username,\n        email,\n        password: password1\n      };\n\n      try {\n        const res = await axios.post('http://localhost:5000/register', body, config);\n        console.log(res);\n        localStorage.setItem('token', res.data.token);\n      } catch (error) {\n        console.log(error.response.data.errors);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tab-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tab\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tab active\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up for Free\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: name,\n                onChange: e => setData({ ...data,\n                  name: e.target.value\n                }),\n                required: true,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"req\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: username,\n                onChange: e => setData({ ...data,\n                  username: e.target.value\n                }),\n                required: true,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"User Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"req\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setData({ ...data,\n                email: e.target.value\n              }),\n              required: true,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Email Address\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"req\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password1,\n              onChange: e => setData({ ...data,\n                password1: e.target.value\n              }),\n              required: true,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Enter Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"req\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password2,\n              onChange: e => setData({ ...data,\n                password2: e.target.value\n              }),\n              required: true,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"req\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button-block\",\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"cf6Mcb18vZ2kAlgUUgd/xoGF9n4=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/MERN/placedIn/client/src/components/Signup.js"],"names":["React","useState","axios","Signup","data","setData","name","username","email","password1","password2","errors","setErrors","onSubmit","e","preventDefault","console","log","config","headers","body","password","res","post","localStorage","setItem","token","error","response","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react' \r\nimport axios from 'axios'\r\n\r\nfunction Signup() {\r\n\r\n    const [ data, setData ] = useState({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        password1: '',\r\n        password2: ''\r\n    })\r\n\r\n    const [ errors, setErrors ] = useState([])\r\n\r\n    const { name, username, email, password1, password2 } = data\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if(password1 !== password2) {\r\n            console.log('Passwords do not match')\r\n        } else {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const body = { name, username, email, password: password1 }\r\n\r\n            try {\r\n                const res = await axios.post('http://localhost:5000/register', body, config)\r\n                console.log(res)\r\n                localStorage.setItem('token',res.data.token)\r\n\r\n            } catch ( error ) {\r\n                console.log(error.response.data.errors)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <ul className=\"tab-group\">\r\n                <li className=\"tab\"><a href=\"/\">Log In</a></li>\r\n                <li className=\"tab active\"><a href=\"/signup\">Sign Up</a></li>\r\n            </ul>\r\n            \r\n            <div className=\"tab-content\">\r\n                <div id=\"signup\">   \r\n                    <h1>Sign Up for Free</h1>\r\n                    <form  onSubmit={(e) => onSubmit(e)}>\r\n                        <div className=\"top-row\">\r\n                            <div className=\"field-wrap\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={name}\r\n                                    onChange={(e) => setData({ ...data, name: e.target.value })}\r\n                                    required \r\n                                    autocomplete=\"off\" \r\n                                />\r\n                                <label>\r\n                                    Name<span class=\"req\">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"field-wrap\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    value={username}\r\n                                    onChange={(e) => setData({ ...data, username: e.target.value })}\r\n                                    required \r\n                                    autocomplete=\"off\"    \r\n                                />\r\n                                <label>\r\n                                    User Name<span className=\"req\">*</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field-wrap\">\r\n                            <input \r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setData({ ...data, email: e.target.value })}\r\n                                required \r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <label>\r\n                                Email Address<span className=\"req\">*</span>\r\n                            </label>\r\n                        </div>\r\n                    \r\n                        <div className=\"field-wrap\">\r\n                            <input \r\n                                type=\"password\"\r\n                                value={password1}\r\n                                onChange={(e) => setData({ ...data, password1: e.target.value })}\r\n                                required \r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <label>\r\n                                Enter Password<span className=\"req\">*</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"field-wrap\">\r\n                            <input \r\n                                type=\"password\"\r\n                                value={password2}\r\n                                onChange={(e) => setData({ ...data, password2: e.target.value })}\r\n                                required \r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <label>\r\n                                Confirm Password<span className=\"req\">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"button button-block\">Get Started</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}